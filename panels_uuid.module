<?php

/**
 * @file
 * Implement UUID/Entity hooks for integrating with deploy and other modules.
 */

/**
 * Implements hook_panels_display_save().
 *
 * @param $display
 */
function panels_uuid_panels_display_save($display) {
  if (empty($display->uuid)) {
    $display->uuid = uuid_generate();
    db_update("panels_display")
      ->fields(array(
        'uuid' => $display->uuid
      ))
      ->condition('did', $display->did)
      ->execute();
  }

  foreach ($display->content as &$pane) {
    if (empty($pane->uuid)) {
      $pane->uuid = uuid_generate();
      db_update("panels_pane")
        ->fields(array(
          'uuid' => $pane->uuid
        ))
        ->condition('pid', $pane->pid)
        ->execute();
    }
  }
}

/**
 * Implements hook_uuid_sync().
 */
function panels_uuid_uuid_sync() {
  $result = db_query("SELECT did, uuid FROM panels_display where UUID IS NULL or UUID = ''");

  if ($result) {
    while ($row = $result->fetchAssoc()) {
      db_update('panels_display')
        ->condition('did', $row['did'])
        ->fields(array(
          'uuid' => uuid_generate()
        ))->execute();
    }
  }

  $result = db_query("SELECT pid, uuid FROM panels_pane where UUID IS NULL or UUID = ''");

  if ($result) {
    while ($row = $result->fetchAssoc()) {
      db_update('panels_pane')
        ->condition('pid', $row['pid'])
        ->fields(array(
          'uuid' => uuid_generate()
        ))->execute();
    }
  }
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_display_to_uuid(&$displays) {
  panels_uuid_convert_helper($displays, 'panels_display', 'did', 'uuid');
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_display_to_id(&$displays) {
  panels_uuid_convert_helper($displays, 'panels_display', 'uuid', 'did');
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_pane_to_uuid(&$panes) {
  panels_uuid_convert_helper($panes, 'panels_pane', 'pid', 'uuid');
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_pane_to_id(&$panes) {
  panels_uuid_convert_helper($panes, 'panels_pane', 'uuid', 'pid');
}

/**
 * @param $objects array
 * @param $table string
 * @param $from string
 * @param $to string
 */
function panels_uuid_convert_helper(&$objects, $table, $from, $to) {
  if (!is_array($objects)) {
    $things = array(&$objects);
  } else {
    $things = &$objects;
  }

  // track the references
  $values = array();
  // track the ids
  $ids = array();
  $i = 0;
  foreach ($things as &$thing) {
    $values[$i] = &$thing->$from;
    $ids[] = $values[$i];
  }

  $new_ids = db_select($table, 't')
    ->fields('t', array($from, $to))
    ->condition($from, $ids, 'IN')
    ->execute()
    ->fetchAllKeyed();

  foreach ($values as $i => $value) {
    if (isset($new_ids[$value])) {
      $values[$i] = $new_ids[$value];
    }
  }
}