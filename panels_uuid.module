<?php

/**
 * @file
 * Implement UUID/Entity hooks for integrating with deploy and other modules.
 */

/**
 * Implements hook_panels_display_save().
 *
 * @param $display
 */
function panels_uuid_panels_display_save($display) {
  if (empty($display->uuid)) {
    $display->uuid = uuid_generate();
    db_update("panels_display")
      ->fields(array(
        'uuid' => $display->uuid
      ))
      ->condition('did', $display->did)
      ->execute();
  }

  foreach ($display->content as &$pane) {
    if (empty($pane->uuid)) {
      $pane->uuid = uuid_generate();
      db_update("panels_pane")
        ->fields(array(
          'uuid' => $pane->uuid
        ))
        ->condition('pid', $pane->pid)
        ->execute();
    }
  }
}

/**
 * Implements hook_uuid_sync().
 */
function panels_uuid_uuid_sync() {
  $result = db_query("SELECT did, uuid FROM panels_display where UUID IS NULL or UUID = ''");

  if ($result) {
    while ($row = $result->fetchAssoc()) {
      db_update('panels_display')
        ->condition('did', $row['did'])
        ->fields(array(
          'uuid' => uuid_generate()
        ))->execute();
    }
  }

  $result = db_query("SELECT pid, uuid FROM panels_pane where UUID IS NULL or UUID = ''");

  if ($result) {
    while ($row = $result->fetchAssoc()) {
      db_update('panels_pane')
        ->condition('pid', $row['pid'])
        ->fields(array(
          'uuid' => uuid_generate()
        ))->execute();
    }
  }
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_display_to_uuid(&$displays) {
  if (!is_array($displays)) {
    $things = array(&$displays);
  } else {
    $things = &$displays;
  }

  $values = array();
  foreach ($things as $display) {
    $values[$display->did] = &$display->did;
  }

  $new_ids = panels_uuid_convert_helper($values, 'panels_display', 'did', 'uuid');

  foreach ($new_ids as $id) {
    $values[$id->did];
  }
}

/**
 * Covert a display's uuid to id
 */
function panels_uuid_convert_display_to_id(&$displays) {
  if (!is_array($displays)) {
    $things = array(&$displays);
  } else {
    $things = &$displays;
  }

  $values = array();
  foreach ($things as $display) {
    $values[$display->did] = &$display->did;
  }

  $new_ids = panels_uuid_convert_helper($values, 'panels_display', 'uuid', 'did');

  foreach ($new_ids as $id) {
    $values[$id->did];
  }
}

function panels_uuid_convert_helper($values, $table, $from, $to) {
  return db_select($table, 't')
    ->fields('t', array($from, $to))
    ->condition($from, array_values($values), 'IN')
    ->execute()
    ->fetchAllKeyed();
}